# ðŸŒŒ SON1KVERS3 BACKEND - Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: son1kvers3-postgres
    environment:
      POSTGRES_DB: son1kvers3
      POSTGRES_USER: son1kvers3
      POSTGRES_PASSWORD: son1kvers3_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U son1kvers3"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: son1kvers3-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Son1kVers3 Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: son1kvers3-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://son1kvers3:son1kvers3_password@postgres:5432/son1kvers3
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-at-least-32-characters-long
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-at-least-32-characters-long
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: son1kvers3-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
